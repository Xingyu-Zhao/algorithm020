#什么时候用栈：元素有相关性（一对）；讲究先来后到，用queue
#1暴力：不断地replace匹配的括号，只要找到左右匹配的括号对，就替换成空的，不停替换，
# 直到整个string被替换成空的，O(N^2)
#2. 栈，如果是左括号，压到栈里面去，如果是右括号，与栈顶元素匹配，看看能不呢刚匹配的上，如果匹配上的话
#就正负抵消了，把栈顶元素移出栈，不然的话就是不合法，然后一直这么类似的操作下去，直到整个站为空
#就说明完全匹配了
def isvalid(s):
    dic = {'{': '}', '[': ']', '(': ')', '?': '?'}
    stack = ['?']
    for c in s:
        if c in dic:
            stack.append(c)
        #用法，list.pop([index=-1])，移除列表指定元素，并返回删除的值
        #索引字典对应左括号对应的右括号是否等于循环到的右括号
        elif dic[stack.pop()] != c:
            return False
    return len(stack) == 1

print(isvalid("()[]{}"))

